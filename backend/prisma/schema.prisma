// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String         @id @default(uuid())
  name      String
  email     String         @unique
  createdAt DateTime       @default(now())
  FavoriteAlbum FavoriteAlbum[]
  FavoriteTrack FavoriteTrack[]
}

model Album {
  id              String      @id @default(uuid())
  album_cover_image String
  album_title      String
  artist_name      String
  release_date     DateTime
  tracks           Track[]
  FavoriteAlbum FavoriteAlbum[]
}

model Track {
  id        String    @id @default(uuid())
  album_id  String
  title     String
  duration  String?
  mp3_link  String
  album     Album     @relation(fields: [album_id], references: [id])
  FavoriteTrack FavoriteTrack[]
}

model FavoriteAlbum {
  id        String @id @default(uuid())
  user_id   String
  album_id  String
  user      User   @relation(fields: [user_id], references: [id])
  album     Album  @relation(fields: [album_id], references: [id])

  @@unique([user_id, album_id])
}

model FavoriteTrack {
  id        String @id @default(uuid())
  user_id   String
  track_id  String
  user      User   @relation(fields: [user_id], references: [id])
  track     Track  @relation(fields: [track_id], references: [id])

  @@unique([user_id, track_id])
}
